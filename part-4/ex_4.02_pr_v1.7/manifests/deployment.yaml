apiVersion: apps/v1
kind: Deployment
metadata:
  name: todo-frontend-dep
  namespace: todo-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: todo-frontend
  template:
    metadata:
      labels:
        app: todo-frontend
    spec:
      volumes:
        - name: todo-frontend-volume
          persistentVolumeClaim:
            claimName: todo-claim
      containers:
        - name: todo-frontend
          image: tryfonm/todo-frontend:v4.02
          readinessProbe:
            httpGet:
              path: /healthz # route to check for health
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 5
          volumeMounts:
            - name: todo-frontend-volume
              mountPath: /usr/src/todo-app/files
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: todo-backend-dep
  namespace: todo-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: todo-backend
  template:
    metadata:
      labels:
        app: todo-backend
    spec:
      volumes:
        - name: todo-backend-volume
          persistentVolumeClaim:
            claimName: todo-claim
      containers:
        - name: todo-backend
          image: tryfonm/todo-backend:v4.02
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - ./check_db_connection.sh
            initialDelaySeconds: 15
            periodSeconds: 10
          volumeMounts:
            - name: todo-backend-volume
              mountPath: /usr/src/todo-app/files
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: postgres-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: postgres-password
